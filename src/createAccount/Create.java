/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package createAccount;

import utils.RequestHandler;
import main.Start;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import org.json.JSONObject;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JToolTip;
import javax.swing.ToolTipManager;
import javax.swing.UIManager;
import org.json.JSONException;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.core.MatOfRect;
import org.opencv.core.Point;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.core.Size;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.videoio.VideoCapture;
import org.opencv.imgproc.Imgproc;
import org.opencv.objdetect.CascadeClassifier;
/**
 *
 * @author Cristi
 */
 
public class Create extends javax.swing.JFrame {

    private boolean tookPictures = false;
    
    private Start startForm;
    private Errors err;
    private final RequestHandler handler= new RequestHandler();
       
    private DaemonThread myThread = null;
    VideoCapture webSource = null;
    Mat frame = new Mat();
    Mat imageGray = new Mat();
    Mat face;
    Mat[] savedPhotos = new Mat[10];
    MatOfByte imagineCurenta = new MatOfByte();
    MatOfByte imagineMemorata = new MatOfByte();
    CascadeClassifier faceDetector = new CascadeClassifier(Create.class.getResource("haarcascade_frontalface_alt.xml").getPath().substring(1));
    MatOfRect faceDetections = new MatOfRect();
    Image imagine;
    ImageIcon icon;
    
        class DaemonThread implements Runnable {

        protected volatile boolean runnable = false;

        @Override
        public void run() {
            synchronized (this) {
                while (runnable) {
                    if (webSource.grab()) {
                        try {
                            webSource.retrieve(frame);
                            Graphics g = VideoPanel.getGraphics();
                            
                            Imgproc.cvtColor(frame, imageGray, Imgproc.COLOR_BGR2GRAY);
                            
                            faceDetector.detectMultiScale(frame, faceDetections);
                            Rect rect;
                            
                            for (Rect toArray : faceDetections.toArray()) {
                                rect = toArray;
                                face = new Mat(imageGray, rect);
                                Imgproc.rectangle(frame, new Point(rect.x, rect.y), new Point(rect.x + rect.width, rect.y + rect.height),
                                        new Scalar(0, 255, 0), 2);
                            }
                            
                            Imgcodecs.imencode(".bmp", frame, imagineCurenta);
                            Image im = ImageIO.read(new ByteArrayInputStream(imagineCurenta.toArray()));
                            BufferedImage buff = (BufferedImage) im;
                            if (g.drawImage(buff, 0, 0, getWidth()-680, getHeight()-150, 0, 0, buff.getWidth(), buff.getHeight(), null)) {
                                if (runnable == false) {
                                    System.out.println("Paused ..... ");
                                    g.clearRect(0, 0,buff.getWidth(), buff.getWidth());
                                    VideoPanel.setBackground(Color.LIGHT_GRAY);
                                    this.wait();
                                }   
                                
                            }
                        } catch (IOException | InterruptedException e) {
                        }
                    }
                }
            }
        }
    }
    
    
    
    
    public Create() throws IOException{
        initComponents();
        System.out.println(Create.class.getResource("haarcascade_frontalface_alt.xml").getPath().substring(1));
        UIManager.put("ToolTip.background", Color.RED);
        this.setResizable(false);
        this.pack();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        fullName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        SignUp = new javax.swing.JButton();
        Pass = new javax.swing.JPasswordField();
        ConfPass = new javax.swing.JPasswordField();
        Back = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        VideoPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        Start = new javax.swing.JButton();
        email = new javax.swing.JTextField();
        registration_code = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        info = new javax.swing.JLabel(){
            public JToolTip createToolTip() {
                JToolTip tip = super.createToolTip();
                tip.setForeground(Color.BLACK);
                tip.setBackground(Color.RED);
                tip.setFont(new Font("Arial", Font.BOLD,12));
                return tip;
            }
        };
        confirmPhoto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Write your cool email and a strong password");

        fullName.setEnabled(false);
        fullName.setDisabledTextColor(new java.awt.Color(38, 38, 38));
        fullName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Full Name");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Password");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Confirm password");

        SignUp.setBackground(new java.awt.Color(0, 153, 51));
        SignUp.setForeground(new java.awt.Color(255, 255, 255));
        SignUp.setText("Sign up");
        SignUp.setBorderPainted(false);
        SignUp.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SignUp.setPreferredSize(new java.awt.Dimension(75, 27));
        SignUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUpActionPerformed(evt);
            }
        });

        Pass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        ConfPass.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        Back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/back_button.png"))); // NOI18N
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("E-mail");

        VideoPanel.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout VideoPanelLayout = new javax.swing.GroupLayout(VideoPanel);
        VideoPanel.setLayout(VideoPanelLayout);
        VideoPanelLayout.setHorizontalGroup(
            VideoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 428, Short.MAX_VALUE)
        );
        VideoPanelLayout.setVerticalGroup(
            VideoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 328, Short.MAX_VALUE)
        );

        saveButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        saveButton.setText("Capture");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        Start.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Start.setText("Start");
        Start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartActionPerformed(evt);
            }
        });

        email.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailFocusLost(evt);
            }
        });

        registration_code.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Registration Code");

        info.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/info.png"))); // NOI18N
        info.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                infoMouseEntered(evt);
            }
        });

        confirmPhoto.setVisible(false);
        confirmPhoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/ok.png"))); // NOI18N

        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(fullName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(SignUp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Pass, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(ConfPass, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Back, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(VideoPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(saveButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Start, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(email, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(registration_code, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(info, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(confirmPhoto, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(confirmPhoto))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addContainerGap(74, Short.MAX_VALUE)
                        .addComponent(VideoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)))
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(151, Short.MAX_VALUE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(fullName, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(Pass, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ConfPass, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(registration_code, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(info)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                        .addComponent(SignUp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21))))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(Back, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(36, 36, 36)
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5))
                                        .addGap(35, 35, 35)
                                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(Pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(SignUp, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(info)))
                                .addGap(34, 34, 34)
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ConfPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(37, 37, 37)
                                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(registration_code, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)))
                            .addComponent(VideoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(confirmPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(38, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SignUpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUpActionPerformed
        JSONObject record = null;
        String errorString = "<html><ul>";
        
        if(email.getText().isEmpty()){
            errorString = errorString + "<li>Email field cannot be empty</li>";
            errorString = errorString + "<p></p>";}
        
        try {
            String responseText = handler.RetrieveCredentials(email.getText(),"angajati");
            
            if (responseText.equals("{}")) {
                errorString = errorString + "<li>The email you introduced isn't recognized</li>";
                errorString = errorString + "<p></p>";
            }
            else
            {
                record = new JSONObject(responseText);

                if (!record.has("codInregistrare") && record.has("parola")){
                    errorString = errorString + "<li>You already have an account</li>";
                    errorString = errorString + "<p></p>";}
                else if (!record.getString("codInregistrare").equals(registration_code.getText())) {
                    errorString = errorString + "<li>The code you introduced is invalid or empty</li>";
                    errorString = errorString + "<p></p>";
                }
                
            }
            
        }
        catch (JSONException ex) {
        }
        
        if (String.valueOf(Pass.getPassword()).isEmpty()) {
            errorString = errorString + "<li>Password field cannot be empty</li>";
            errorString = errorString + "<p></p>";
        } else {
            if (!isValidPassword(String.valueOf(Pass.getPassword()))) {
                errorString = errorString + "<li>The password doesn't respect the rules </li>";
                errorString = errorString + "<p></p>";
            }
            if (!String.valueOf(Pass.getPassword()).equals(String.valueOf(ConfPass.getPassword()))) {
                errorString = errorString + "<li>The passwords don't match </li>";
                errorString = errorString + "<p></p>";
                System.out.println("Parole diferite");
            }
        }
        if(tookPictures == false)
            errorString = errorString + "<li>You haven't taken a picture yet</li>";
        
        errorString = errorString + "</ul></html>";
        System.out.println(errorString);
        
        err.setMessage(errorString);
        if(!errorString.equals("<html><ul></ul></html>"))
            err.setVisible(true);
        
        else{
            
            try {
                handler.AddAccount(record.getString("nume"), record.getString("prenume"), record.getString("rol"),
                        record.getString("email"), String.valueOf(Pass.getPassword()), record.getString("telefon"), record.getString("idangajat"));

                Files.createDirectories(Paths.get("C:\\Users\\Cristi\\Desktop\\imagini\\" + email.getText()));

                for (int count = 0; count < 10; count++) {
                    String location = "C:\\Users\\Cristi\\Desktop\\imagini\\" + email.getText()
                            + "\\" + fullName.getText().replaceAll("\\s","") + count + "." + record.getString("idangajat") + ".jpg";
                    Imgcodecs.imwrite(location, savedPhotos[count]);
                }
                
                new TrainLBPH().trainPhotos();
                
            } catch (JSONException | IOException e) {
                Logger.getLogger(Create.class.getName()).log(Level.SEVERE, null, e);
            }
            
            this.setVisible(false);
            
            JLabel label = new JLabel("You have registered successfully!");
            label.setFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 13));
            JOptionPane.showMessageDialog(null, label, "Account created", JOptionPane.INFORMATION_MESSAGE);

            System.exit(0);
                  
        }
                  
         
    }//GEN-LAST:event_SignUpActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        exit();
    }//GEN-LAST:event_BackActionPerformed

    private void StartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartActionPerformed
        webSource = new VideoCapture(0); // video capture from default cam
        myThread = new DaemonThread();
        Thread t = new Thread(myThread);
        t.setDaemon(true);
        myThread.runnable = true;
        t.start();            
        Start.setEnabled(false); 
        saveButton.setEnabled(true);

    }//GEN-LAST:event_StartActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
      
        if (faceDetections.toArray().length < 1) {
            errorWindow("No faces were detected");
        } else if (faceDetections.toArray().length > 1) {
            errorWindow("Multiple faces detected");
        } else {
            for (int count = 0; count < 10; count++) {
                Imgproc.resize(face, face, new Size(160, 160));
                savedPhotos[count] = face;
                confirmPhoto.setVisible(true);
            }

            Imgproc.resize(frame, frame, new Size(428, 314));
            Imgcodecs.imencode(".bmp", frame, imagineMemorata);
            try {
                imagine = ImageIO.read(new ByteArrayInputStream(imagineMemorata.toArray()));
                icon = new ImageIcon(imagine);
                JOptionPane.showMessageDialog(null, "", "Your picture", JOptionPane.PLAIN_MESSAGE, icon);
            } catch (IOException ex) {
            }
            tookPictures = true;
            System.out.println("Photo taken");
        }
        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusLost
        JSONObject record = null;
        
        try {
            String responseText = handler.RetrieveCredentials(email.getText(),"angajati");

            if (!responseText.isEmpty()) {
                record = new JSONObject(responseText);
                fullName.setText(record.getString("nume") + " " + record.getString("prenume"));
            }
            else{
                fullName.setText("");
            }

        } catch (JSONException ex) {
        }
        
    }//GEN-LAST:event_emailFocusLost

    private void infoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_infoMouseEntered
        ToolTipManager.sharedInstance().setInitialDelay(250);
        info.setToolTipText("<html>" + "Password must contain:" + "<br>"
                + "*At least 1 uppercase and 1 digit" + "<br>" + "*No whitespaces" 
                + "<br>" + "*Must be at least 8 characters long" + "</html>");
        ToolTipManager.sharedInstance().setDismissDelay(Integer.MAX_VALUE);
    }//GEN-LAST:event_infoMouseEntered
    
    public static boolean isValidPassword(String password) {
        String regex = "^(?=.*[0-9])"
                     + "(?=.*[a-z])(?=.*[A-Z])"
                     + "(?=\\S+$).{8,200}$";
        Pattern p = Pattern.compile(regex);

        if (password == null) {
            return false;
        }

        Matcher m = p.matcher(password);
        return m.matches();
    }
    
    private void errorWindow(String message){
        JLabel label = new JLabel(message);
        label.setFont(new java.awt.Font("Segoe UI", java.awt.Font.PLAIN, 16));
        JOptionPane.showMessageDialog(null, label, "Capture Error", JOptionPane.ERROR_MESSAGE);     
    }
    
    private void exit(){
        fullName.setText("");
        email.setText("");
        registration_code.setText("");
        Pass.setText("");
        ConfPass.setText("");
        
        Start.setEnabled(true);
        saveButton.setEnabled(false);
        confirmPhoto.setVisible(false);
        
        tookPictures = false;
        this.setVisible(false);
        this.setLocationRelativeTo(null);
        startForm.setVisible(true);
        
        if(myThread != null){
            myThread.runnable = false;
            Start.setEnabled(true);
            webSource.release();
        }
    }
     
    public void setClass(Start start, Errors errorClass){
        this.startForm = start;
        this.err = errorClass;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Create.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JPasswordField ConfPass;
    private javax.swing.JPasswordField Pass;
    private javax.swing.JButton SignUp;
    private javax.swing.JButton Start;
    private javax.swing.JPanel VideoPanel;
    private javax.swing.JLabel confirmPhoto;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fullName;
    private javax.swing.JLabel info;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JTextField registration_code;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
