/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainFrame;

import utils.RequestHandler;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import static java.time.temporal.ChronoUnit.YEARS;
import java.util.regex.Pattern;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import org.apache.commons.validator.routines.EmailValidator;
import org.json.JSONException;

/**
 *
 * @author Cristi
 */
public class AddClientForm extends javax.swing.JFrame {

    private Frame frame;
    private final RequestHandler handler = new RequestHandler();
    
    private String employedString = "nu";
    
    public AddClientForm() {
        initComponents();
        this.setResizable(false);
        this.pack();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        LastName = new javax.swing.JTextField();
        FirstName = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        phoneNumber = new javax.swing.JTextField();
        employed = new javax.swing.JToggleButton();
        income = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        birthdate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        back = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LastName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        LastName.setForeground(new java.awt.Color(102, 102, 102));
        LastName.setText("Last Name");
        LastName.setToolTipText("");
        LastName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                LastNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                LastNameFocusLost(evt);
            }
        });

        FirstName.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        FirstName.setForeground(new java.awt.Color(102, 102, 102));
        FirstName.setText("First Name");
        FirstName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                FirstNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                FirstNameFocusLost(evt);
            }
        });

        email.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        email.setForeground(new java.awt.Color(102, 102, 102));
        email.setText("E-mail");
        email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailFocusLost(evt);
            }
        });

        phoneNumber.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        phoneNumber.setForeground(new java.awt.Color(102, 102, 102));
        phoneNumber.setText("Phone number");
        phoneNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                phoneNumberFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                phoneNumberFocusLost(evt);
            }
        });

        employed.setBackground(new java.awt.Color(204, 0, 0));
        employed.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        employed.setForeground(new java.awt.Color(255, 255, 255));
        employed.setText("Unemployed");
        employed.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        employed.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                employedItemStateChanged(evt);
            }
        });

        income.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        income.setForeground(new java.awt.Color(102, 102, 102));
        income.setText("Monthly income");
        income.setEnabled(false);
        income.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                incomeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                incomeFocusLost(evt);
            }
        });

        address.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        address.setForeground(new java.awt.Color(102, 102, 102));
        address.setText("Address");
        address.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addressFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                addressFocusLost(evt);
            }
        });

        birthdate.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        birthdate.setForeground(new java.awt.Color(102, 102, 102));
        birthdate.setText("Birthdate: YYYY-MM-DD");
        birthdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                birthdateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                birthdateFocusLost(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/ClientForm/address.png"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/ClientForm/phone.png"))); // NOI18N

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/ClientForm/email.png"))); // NOI18N

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/ClientForm/age.png"))); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/ClientForm/name.png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/ClientForm/euro.png"))); // NOI18N

        addButton.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        addButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/ClientForm/add_client.png"))); // NOI18N
        addButton.setText(" Add Client");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/back_button.png"))); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(employed, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(income, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(address)
                                    .addComponent(phoneNumber)
                                    .addComponent(email)
                                    .addComponent(birthdate)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(LastName, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(179, 179, 179)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LastName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(birthdate)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(email)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(phoneNumber)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(income, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(employed, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(55, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void employedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_employedItemStateChanged
        int state = evt.getStateChange();
        if (state == ItemEvent.SELECTED) {
            income.setEnabled(true);
            employed.setBackground(new Color(0,129,0));
            employed.setText("Employed");
            employedString = "da";
        } else {
            income.setEnabled(false);  
            employed.setBackground(new Color(204,0,0));
            employed.setText("Unemployed");
            employedString = "nu";
        }
    }//GEN-LAST:event_employedItemStateChanged

    private void LastNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LastNameFocusGained
        removePlaceholder(LastName,"Last Name");
    }//GEN-LAST:event_LastNameFocusGained

    private void LastNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LastNameFocusLost
        redrawPlaceholder(LastName,"Last Name");
    }//GEN-LAST:event_LastNameFocusLost

    private void FirstNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FirstNameFocusGained
        removePlaceholder(FirstName,"First Name");
    }//GEN-LAST:event_FirstNameFocusGained

    private void FirstNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FirstNameFocusLost
        redrawPlaceholder(FirstName,"First Name");
    }//GEN-LAST:event_FirstNameFocusLost

    private void birthdateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_birthdateFocusGained
        removePlaceholder(birthdate,"Birthdate: YYYY-MM-DD");
    }//GEN-LAST:event_birthdateFocusGained

    private void birthdateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_birthdateFocusLost
        redrawPlaceholder(birthdate,"Birthdate: YYYY-MM-DD");
    }//GEN-LAST:event_birthdateFocusLost

    private void emailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusGained
        removePlaceholder(email,"E-mail");
    }//GEN-LAST:event_emailFocusGained

    private void emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailFocusLost
        redrawPlaceholder(email,"E-mail");
    }//GEN-LAST:event_emailFocusLost

    private void phoneNumberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneNumberFocusGained
        removePlaceholder(phoneNumber,"Phone number");
    }//GEN-LAST:event_phoneNumberFocusGained

    private void phoneNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneNumberFocusLost
        redrawPlaceholder(phoneNumber,"Phone number");
    }//GEN-LAST:event_phoneNumberFocusLost

    private void addressFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressFocusGained
        removePlaceholder(address,"Address");
    }//GEN-LAST:event_addressFocusGained

    private void addressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressFocusLost
        redrawPlaceholder(address,"Address");
    }//GEN-LAST:event_addressFocusLost

    private void incomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_incomeFocusGained
        removePlaceholder(income,"Monthly income");
    }//GEN-LAST:event_incomeFocusGained

    private void incomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_incomeFocusLost
        redrawPlaceholder(income,"Monthly income");
    }//GEN-LAST:event_incomeFocusLost

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if (checkFieldsFormat()) // verifica campurile ce trebuie sa contina doar cifre (phoneNumber si income)
        {
            if (!(LastName.getText().equals("Last Name") || FirstName.getText().equals("First Name") || birthdate.getText().equals("Birthdate: YYYY-MM-DD")
                    || email.getText().equals("E-mail") || phoneNumber.getText().equals("Phone number") || address.getText().equals("Address"))) {
                try {
                    String name = CorrectName(LastName.getText());
                    String surname = CorrectSurname(FirstName.getText());
                    
                    handler.AddClient(name, surname, email.getText(), phoneNumber.getText(), age(),
                             employedString, ((income.isEnabled()) ? Double.parseDouble(income.getText()) : 0), address.getText());
                    
                    this.setVisible(false);
                    this.setLocationRelativeTo(null);
                    frame.setFocusableWindowState(true);
                    confirmationWindow("<html>You have added <b>" + name + " " + surname + "</b></html>");
                    reinitialize();
                } catch (IOException | JSONException ex) {
                }
            } else {
                errorWindow("One or more fields are empty!");
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        this.setVisible(false);
        this.setLocationRelativeTo(null);
        frame.setFocusableWindowState(true);
        reinitialize(); 
    }//GEN-LAST:event_backActionPerformed
    
    private void removePlaceholder(JTextField field, String text) {
        if (field.getText().equals(text)) {
            field.setText("");
            field.setForeground(Color.BLACK);
        }
    }

    private void redrawPlaceholder(JTextField field, String text) {
        if (field.getText().isEmpty() || !this.isVisible()) {
            field.setText(text);
            field.setForeground(new Color(102, 102, 102));
        }

    }
    
    private int age() {
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        LocalDate dateStart = LocalDate.parse(birthdate.getText(), formatter);

        int age = (int) YEARS.between(dateStart, LocalDate.now());

        return age;
    }
    
    //format name input after initial validation => example: poPEsCu -> Popescu 
    private String CorrectName(String value) {
    	
    	if(!value.matches("[A-Z]{1}[a-z]+")) {
    		
    		if(Character.isLowerCase(value.charAt(0)))
    			value = value.substring(0,1).toUpperCase() + value.substring(1); // prima litera toUpperCase
    		
    		for(int i = 1; i<value.length(); i++)
    			if(Character.isUpperCase(value.charAt(i)))
    				value = value.substring(0,i) + value.substring(i, i + 1).toLowerCase() + value.substring(i + 1);
    				
    	}
        
        return value;
        
    }
    
    //format surname input after initial validation => example: -> AndrEI-stefan -> Andrei-Stefan
    private String CorrectSurname(String value) {
    	
        @SuppressWarnings("ReplaceStringBufferByString")
    	StringBuilder sb = new StringBuilder(value);
    	
    	if(!value.matches("[A-Z]{1}[a-z]+([ -]{1}[A-Z]{1}[a-z]+)*")) {
    		
    		if(Character.isLowerCase(value.charAt(0)))
    			value = value.substring(0,1).toUpperCase() + value.substring(1);
    		
    		for(int i = 1; i<value.length(); i++) {
    			if(value.charAt(i - 1) == ' ' || value.charAt(i - 1) == '-') {
    				if(Character.isLowerCase(value.charAt(i))) // dupa delimitator(spatiu sau "-") urmeaza litera mare
    					value = value.substring(0, i) + value.substring(i, i + 1).toUpperCase() + value.substring(i + 1);
    				else if(value.charAt(i) == ' ' || value.charAt(i) == '-') { // elimina spatii sau caractere "-" consecutive
    	    			sb.deleteCharAt(i);
    					value = sb.toString();
    					}
    			}
    				
    			else if(Character.isUpperCase(value.charAt(i)))
    					value = value.substring(0,i) + value.substring(i, i + 1).toLowerCase() + value.substring(i + 1);
    		}
    		
    	}
    	
    	return value;
    	
    }
    
    
    
    
    private boolean checkFieldsFormat() {
        
        Pattern last_name = Pattern.compile("^[A-Za-z]+$");
        Pattern first_name = Pattern.compile("^[A-Za-z]+([ -]{1}[A-Za-z]+)*$");
        Pattern date_pattern = Pattern.compile("^(19[0-9][0-9]|20[0-2][0-9])-(0[1-9]|1[0-2])-([0-2][1-9]|3[0-1])$"); 
        
        boolean validEmail = EmailValidator.getInstance().isValid(email.getText());
        
        if (!LastName.getText().equals("Last Name")){
            if(!last_name.matcher(LastName.getText()).matches()){
                errorWindow("Illegal characters in the last name!");
                return false;
            }
        }
        
        if (!FirstName.getText().equals("Last Name")){
            if(!first_name.matcher(FirstName.getText()).matches()){
                errorWindow("Illegal characters in the first name!");
                return false;
            }
        }
        
        if (!birthdate.getText().equals("Birthdate: YYYY-MM-DD")){
            if(!date_pattern.matcher(birthdate.getText()).matches()){
                errorWindow("Invalid date format!");
                return false;
            }
        }
        
        if (!email.getText().equals("E-mail")){
            if(!validEmail){
                errorWindow("You introduced an invalid email!");
                return false;
            }
        }
        
        if (!phoneNumber.getText().equals("Phone number")) {
            try {
                Integer.parseInt(phoneNumber.getText());
            } catch (NumberFormatException e) {
                errorWindow("<html>The phone number should <p style=\"text-align:center\"> contain only digits! </p></html>");
                return false;
            }
        }

        if (income.isEnabled()) {
            try {
                Float.parseFloat(income.getText());
            } catch (NumberFormatException e) {
                errorWindow("The income value needs to be a number!");
                return false;
            }
        }
        return true;
    }
    
    private void errorWindow(String message){
        JLabel label = new JLabel(message);
        label.setFont(new java.awt.Font("Times New Roman", java.awt.Font.PLAIN, 17));
        JOptionPane.showMessageDialog(null, label, "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    private void confirmationWindow(String message){
        JLabel label = new JLabel(message);
        label.setFont(new java.awt.Font("Times New Roman", java.awt.Font.PLAIN, 17));
        JOptionPane.showMessageDialog(null, label, "Confirmation", JOptionPane.INFORMATION_MESSAGE);   
    }
    
    private void reinitialize() {
        employed.setSelected(false);
        redrawPlaceholder(LastName, "Last Name");
        redrawPlaceholder(FirstName, "First Name");
        redrawPlaceholder(birthdate, "Birthdate: YYYY-MM-DD");
        redrawPlaceholder(email, "E-mail");
        redrawPlaceholder(phoneNumber, "Phone number");
        redrawPlaceholder(address, "Address");
        redrawPlaceholder(income, "Monthly income");
        income.setEnabled(false);
        employed.setBackground(new Color(204, 0, 0));
        employed.setText("Unemployed");
        employedString = "nu"; 
    }
    
    public void setFrame(Frame f){
        this.frame = f;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddClientForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AddClientForm().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField FirstName;
    private javax.swing.JTextField LastName;
    private javax.swing.JButton addButton;
    private javax.swing.JTextField address;
    private javax.swing.JButton back;
    private javax.swing.JTextField birthdate;
    private javax.swing.JTextField email;
    private javax.swing.JToggleButton employed;
    private javax.swing.JTextField income;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField phoneNumber;
    // End of variables declaration//GEN-END:variables
}
