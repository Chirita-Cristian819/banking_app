/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loginForm;

/**
 *
 * @author Cristi
 */
import mainFrame.Frame;
import mainFrame.AdminFrame;
import main.Start;
import utils.ImagePanel;
import utils.RequestHandler;
import createAccount.Create;
import java.io.IOException;
import javax.swing.ToolTipManager;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import org.json.JSONException;
import org.json.JSONObject;
import org.mindrot.jbcrypt.BCrypt;
import org.opencv.face.LBPHFaceRecognizer;
import org.opencv.objdetect.CascadeClassifier;
import org.opencv.core.Mat;
import org.opencv.core.MatOfByte;
import org.opencv.core.MatOfRect;
import org.opencv.core.Point;
import org.opencv.core.Rect;
import org.opencv.core.Scalar;
import org.opencv.core.Size;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;
import org.opencv.videoio.VideoCapture;

public class Login extends javax.swing.JFrame {

    public int id = 0;
    
    private Start start;
    private RecoveryForm recovery;
    private Frame frame;
    private AdminFrame admframe;
    private final RequestHandler handler = new RequestHandler();
    
    private DaemonThread myThread = null;
    VideoCapture webSource = null;
    Mat matrImag = new Mat();
    Mat imageGray = new Mat();
    Mat face;
    Mat[] savedPhotos = new Mat[25];
    MatOfByte imagineCurenta = new MatOfByte();
    MatOfByte imagineMemorata = new MatOfByte();
    CascadeClassifier faceDetector = new CascadeClassifier(Create.class.getResource("haarcascade_frontalface_alt.xml").getPath().substring(1));
    MatOfRect faceDetections = new MatOfRect();
    private boolean noaccount = true, active = false;
    int prediction = -1;

    LBPHFaceRecognizer recognizer = LBPHFaceRecognizer.create();
   
    public Login() throws IOException{
        initComponents();
        initRecognizer();
        this.setResizable(false);
        this.pack();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        back = new javax.swing.JButton();
        imagePanel = new javax.swing.JPanel();
        StartCamera = new javax.swing.JButton();
        try{
            jPanel2 = new ImagePanel(getClass().getResource("/banking_app/background.png").toString().substring(6));
        } catch (IOException e) {
        }
        EmailLabel = new javax.swing.JLabel();
        PasswordLabel = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        parola = new javax.swing.JPasswordField();
        LoginButton = new javax.swing.JButton();
        showPassword = new javax.swing.JLabel();
        Help = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        back.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/back_button.png"))); // NOI18N
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        imagePanel.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 386, Short.MAX_VALUE)
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 312, Short.MAX_VALUE)
        );

        StartCamera.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        StartCamera.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/camera.png"))); // NOI18N
        StartCamera.setText("Start Camera");
        StartCamera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartCameraActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(8, 146, 208));

        EmailLabel.setFont(new java.awt.Font("Tw Cen MT", 0, 22)); // NOI18N
        EmailLabel.setForeground(new java.awt.Color(255, 255, 255));
        EmailLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EmailLabel.setText("Email");

        PasswordLabel.setFont(new java.awt.Font("Tw Cen MT", 0, 22)); // NOI18N
        PasswordLabel.setForeground(new java.awt.Color(255, 255, 255));
        PasswordLabel.setText("Password");

        email.setFont(new java.awt.Font("Times New Roman", 0, 19)); // NOI18N

        parola.setFont(new java.awt.Font("Times New Roman", 0, 19)); // NOI18N

        LoginButton.setBackground(new java.awt.Color(243, 129, 0));
        LoginButton.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        LoginButton.setForeground(new java.awt.Color(255, 255, 255));
        LoginButton.setText("Login");
        LoginButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                LoginButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                LoginButtonMouseExited(evt);
            }
        });
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });
        LoginButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                LoginButtonKeyTyped(evt);
            }
        });

        showPassword.setIcon(new javax.swing.ImageIcon(getClass().getResource("/banking_app/show_pass_alt.png"))); // NOI18N
        showPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                showPasswordMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                showPasswordMouseReleased(evt);
            }
        });

        Help.setBackground(new java.awt.Color(0, 0, 204));
        Help.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        Help.setForeground(new java.awt.Color(210, 210, 210));
        Help.setText("Forgot password?");
        Help.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Help.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HelpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                HelpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                HelpMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(EmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(PasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(parola, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(email))
                        .addGap(18, 18, 18)
                        .addComponent(showPassword)
                        .addGap(46, 46, 46))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(Help)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(LoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(212, 212, 212))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(138, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(parola, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(PasswordLabel))
                    .addComponent(showPassword))
                .addGap(58, 58, 58)
                .addComponent(LoginButton)
                .addGap(13, 13, 13)
                .addComponent(Help)
                .addGap(85, 85, 85))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(126, 126, 126)
                        .addComponent(StartCamera))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(69, 69, 69)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(imagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(StartCamera)
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
            CheckLogin();
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void HelpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HelpMouseEntered
        ToolTipManager.sharedInstance().setInitialDelay(250);
        Help.setToolTipText("<html>" + "Forgot your email? Contact administrator:" + "<br>"
                + "Name: Chirita Cristian" + "<br>" + "E-mail: cristianchirita1@gmail.com" + "</html>");
        ToolTipManager.sharedInstance().setDismissDelay(Integer.MAX_VALUE);
        Help.setForeground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_HelpMouseEntered

    private void LoginButtonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LoginButtonKeyTyped
            if(evt.getKeyChar() == '\n') CheckLogin();
    }//GEN-LAST:event_LoginButtonKeyTyped

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        reinitialize();
        start.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void StartCameraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartCameraActionPerformed
        webSource = new VideoCapture(0); // video capture from default cam
        myThread = new Login.DaemonThread(); //create object of threat class
        Thread thread = new Thread(myThread);
        thread.setDaemon(true);
        myThread.runnable = true;
        thread.start();                 
        StartCamera.setEnabled(false);  
        active = true;
    }//GEN-LAST:event_StartCameraActionPerformed

    private void HelpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HelpMouseExited
        Help.setForeground(new java.awt.Color(210, 210, 210));
    }//GEN-LAST:event_HelpMouseExited

    private void HelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HelpMouseClicked
        recovery.setVisible(true);
        this.setFocusableWindowState(false);
        parola.setText("");
    }//GEN-LAST:event_HelpMouseClicked

    private void showPasswordMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showPasswordMousePressed
        parola.setEchoChar((char)0);
    }//GEN-LAST:event_showPasswordMousePressed

    private void showPasswordMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showPasswordMouseReleased
        parola.setEchoChar('*');
    }//GEN-LAST:event_showPasswordMouseReleased

    private void LoginButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseEntered
        LoginButton.setBackground(new java.awt.Color(255, 165, 0));
    }//GEN-LAST:event_LoginButtonMouseEntered

    private void LoginButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LoginButtonMouseExited
        LoginButton.setBackground(new java.awt.Color(243, 129, 0));
    }//GEN-LAST:event_LoginButtonMouseExited
    
    private void CheckLogin() {
        JSONObject record = null;
        if (!(email.getText().isEmpty() || String.valueOf(parola.getPassword()).isEmpty())) {
            try {
                String responseText = handler.RetrieveCredentials(email.getText(), "angajati");

                if (!responseText.isEmpty()) {
                    record = new JSONObject(responseText);

                    if (BCrypt.checkpw(String.valueOf(parola.getPassword()), record.getString("parola")) && record.has("parola")) {
                        if (active) {
                             if (prediction == Integer.parseInt(record.getString("idangajat"))) {
                            if (record.getString("rol").equals("admin")) {
                                admframe.setVisible(true);
                                admframe.initTable();
                            } else {
                                int nivel = 0;
                                switch (record.getString("rol")) {
                                    case "nivel1":
                                        nivel = 1;
                                        break;
                                    case "nivel2":
                                        nivel = 2;
                                        break;
                                    default:
                                        nivel = 3;
                                        break;
                                }
                                frame.setNivelAngajat(nivel);
                                frame.setNume("Welcome " + record.getString("nume") + " " + record.getString("prenume"));
                                frame.setEmail(record.getString("email"));
                                frame.setNivelLabel("employee level " + String.valueOf(nivel));
                                frame.setVisible(true);
                            }

                            reinitialize();
                            
                    } else {
                        errorWindow("Could not match the face with the associated account!","Facial Recognition Error");
                     }
                        } else {
                            errorWindow("Camera not started", "Facial Recognition Error");
                        }
                    } else {
                        errorWindow("Wrong email or password!", "Login Error");
                    }
                } else {
                    errorWindow("Wrong email or password!", "Login Error");
                }

            } catch (JSONException ex) {
            }

        } else {
            errorWindow("Email or password field empty", "Login Error");
        }

    }


        class DaemonThread implements Runnable {

        protected volatile boolean runnable = false;

        @Override
        public void run() {
            synchronized (this) {
                while (runnable) {
                    if (webSource.grab()) {
                        try {
                            webSource.retrieve(matrImag);
                            Graphics g = imagePanel.getGraphics();
                            
                            Imgproc.cvtColor(matrImag, imageGray, Imgproc.COLOR_BGR2GRAY);
                            
                            faceDetector.detectMultiScale(matrImag, faceDetections);
                            
                            for (Rect rect : faceDetections.toArray()) {
                                face = new Mat(imageGray, rect);
                                Imgproc.resize(face, face, new Size(160, 160));

                                if (noaccount == false) {
                                    int[] predictedLabel = {-1};
                                    double[] confidence = {0.88};
                                    recognizer.predict(face, predictedLabel, confidence);
                                    prediction = predictedLabel[0];

                                    if (prediction == -1) {
                                        System.out.println("Face not recognized");
                                    } else {
                                        System.out.println(prediction);
                                    }
                                }

                                Imgproc.rectangle(matrImag, new Point(rect.x, rect.y), new Point(rect.x + rect.width, rect.y + rect.height),
                                        new Scalar(0, 255, 0), 2);
                            }

                            Imgcodecs.imencode(".bmp", matrImag, imagineCurenta);
                            Image im = ImageIO.read(new ByteArrayInputStream(imagineCurenta.toArray()));
                            BufferedImage buff = (BufferedImage) im;
                            if (g.drawImage(buff, 0, 0, getWidth() - 650, getHeight() - 130, 130, 0, buff.getWidth() + 100, buff.getHeight(), null)) {                              
                                if (runnable == false) {
                                    g.clearRect(0, 0, buff.getWidth(), buff.getWidth());
                                    imagePanel.setBackground(new Color(153, 153, 153));
                                    this.wait();
                                }

                            }
                        } catch (IOException | InterruptedException e) {
                        }
                    }
                }
            }
        }
    }
    
    private void stopCamera(){
        if(myThread != null){
            myThread.runnable = false; // stop thread
            StartCamera.setEnabled(true); // deactivate stop button
            webSource.release(); //stop caturing fron cam
            active = false;
        }
    }
    
    private void reinitialize(){
        email.setText("");
        parola.setText("");
        this.setVisible(false);
        stopCamera();
        this.setLocationRelativeTo(null);
    }
    
    private void errorWindow(String message, String header){
        JLabel label = new JLabel(message);
        label.setFont(new java.awt.Font("Times New Roman", java.awt.Font.PLAIN, 17));
        JOptionPane.showMessageDialog(null, label, header, JOptionPane.ERROR_MESSAGE);
        
    }     
    
    public void initRecognizer() {
        if (new File("C:\\Users\\Cristi\\Desktop\\imagini\\classifierLBPH.yml").exists()) {
            recognizer.read("C:\\Users\\Cristi\\Desktop\\imagini\\classifierLBPH.yml");
            noaccount = false;
        } else {
            System.out.println("Nici o persoana nu a fost inregistrata inca!");
        }
        recognizer.setThreshold(80);
    }
    
    public void setFrame(Start str, RecoveryForm rec, Frame frame, AdminFrame adf){ 
        this.recovery = rec;
        this.start = str;
        this.frame = frame;
        this.admframe = adf;
    }   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EmailLabel;
    private javax.swing.JLabel Help;
    public javax.swing.JButton LoginButton;
    private javax.swing.JLabel PasswordLabel;
    private javax.swing.JButton StartCamera;
    private javax.swing.JButton back;
    private javax.swing.JTextField email;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField parola;
    private javax.swing.JLabel showPassword;
    // End of variables declaration//GEN-END:variables
}